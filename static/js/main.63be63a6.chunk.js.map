{"version":3,"sources":["index.js"],"names":["PomodoroClock","props","incrementBreak","state","breakLength","console","warn","setState","sessionLength","timeLeft","minutes","isSession","seconds","isPaused","timerID","decrementBreak","decrementSession","incrementSession","reset","beep","document","getElementById","pause","currentTime","clearInterval","stopTimer","startTimer","setInterval","updateClock","triggerPlayOrPause","newSeconds","newMinutes","newSession","play","id","this","onClick","toString","preload","src","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.63be63a6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Same beep sound from free code camp\nconst BEEPSRC = \"https://goo.gl/65cBl1\"\n\nclass PomodoroClock extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timeLeft: {\n        minutes: 25,\n        seconds: 0\n      },\n      isSession: true,\n      isPaused: true,\n      timerID: null, \n    }\n  }\n  // Can only increase/decrease when isPaused is true ??\n\n  incrementBreak = () => {\n    if (this.state.breakLength + 1 > 60){\n      console.warn(`User cannot set break length greater than 60`);\n    } else {\n      this.setState(\n        {\n          breakLength: this.state.breakLength + 1,\n          sessionLength: this.state.sessionLength,\n          timeLeft: {\n            minutes: this.state.isSession ? this.state.timeLeft.minutes :  this.state.breakLength + 1,\n            seconds: this.state.timeLeft.seconds\n          },\n          isSession: this.state.isSession,\n          isPaused: this.state.isPaused,\n          timerID: this.state.timerID,\n        }\n      )\n    }\n  }\n\n  decrementBreak = () => {\n    if (this.state.breakLength - 1 < 1){\n      console.warn(`User cannot set break length less than 1`);\n    } else {\n      this.setState(\n        {\n          breakLength: this.state.breakLength - 1,\n          sessionLength: this.state.sessionLength,\n          timeLeft: {\n            minutes: this.state.isSession ? this.state.timeLeft.minutes :  this.state.breakLength - 1,\n            seconds: this.state.timeLeft.seconds\n          },\n          isSession: this.state.isSession,\n          isPaused: this.state.isPaused,\n          timerID: this.state.timerID,\n        }\n      )\n    }\n  }\n\n  decrementSession= () => {\n    if (this.state.sessionLength - 1 < 1){\n      console.warn(`User cannot set session length less than 1`);\n    } else {\n      this.setState(\n        {\n          breakLength: this.state.breakLength,\n          sessionLength: this.state.sessionLength - 1,\n          timeLeft: {\n            minutes: this.state.isSession ? this.state.sessionLength - 1 :  this.state.timeLeft.minutes,\n            seconds: this.state.timeLeft.seconds\n          },\n          isSession: this.state.isSession,\n          isPaused: this.state.isPaused,\n          timerID: this.state.timerID,\n        }\n      )\n    }\n  }\n\n  incrementSession = () => {\n    if (this.state.sessionLength + 1 > 60){\n      console.warn(`User cannot set session length greater than 60`);\n    } else {\n      this.setState(\n        {\n          breakLength: this.state.breakLength,\n          sessionLength: this.state.sessionLength + 1,\n          timeLeft: {\n            minutes: this.state.isSession ? this.state.sessionLength - 1 :  this.state.timeLeft.minutes,\n            seconds: this.state.timeLeft.seconds\n          },\n          isSession: this.state.isSession,\n          isPaused: this.state.isPaused,\n          timerID: this.state.timerID,\n        }\n      )\n    }\n  }\n\n  reset = () => {\n    // Stop beep sound and rewount to the beginning\n    let beep = document.getElementById('beep'); \n    beep.pause();\n    beep.currentTime = 0;\n\n    if (this.state.timerID){\n      clearInterval(this.state.timerID);\n    }\n\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      timeLeft: {\n        minutes: 25,\n        seconds: 0\n      },\n      isSession: true,\n      isPaused: true,\n      timerID: null \n    });\n  }\n\n  stopTimer = () => {\n    if (this.state.timerID){\n      clearInterval(this.state.timerID);\n    };\n\n    this.setState({\n      breakLength: this.state.breakLength,\n      sessionLength: this.state.sessionLength,\n      timeLeft: {\n          minutes: this.state.timeLeft.minutes,\n          seconds: this.state.timeLeft.seconds,\n        },\n      isSession: this.state.isSession,\n      isPaused: true,\n      timerID: null, \n    });\n  }\n\n  startTimer = () => {\n    this.setState(\n      {\n        breakLength: this.state.breakLength,\n        sessionLength: this.state.sessionLength,\n        timeLeft: {\n          minutes: this.state.timeLeft.minutes,\n          seconds: this.state.timeLeft.seconds\n        },\n        isSession: this.state.isSession,\n        isPaused: false,\n        timerID: setInterval(this.updateClock, 1000),\n      }\n    );\n  }\n\n  triggerPlayOrPause = () => {\n    let newState = !this.state.isPaused;\n    if (newState === true) {\n      this.stopTimer();\n    } else {\n      this.startTimer();\n    }\n  }\n\n  updateClock = () => {\n    // decrease the clock by 1 second\n    let newSeconds;\n    let newMinutes;\n    let newSession = false;\n    if (this.state.timeLeft.seconds === 0) {\n      if (this.state.timeLeft.minutes === 0){ \n        // switch between break and session\n        newSession = true;\n        newSeconds = 0;\n        if (this.state.isSession){\n          newMinutes = this.state.breakLength;\n        } else {\n          newMinutes = this.state.sessionLength;\n        }\n        // play beep sound\n        let beep = document.getElementById('beep'); \n        beep.play();\n      } else {\n        newSeconds = 59;\n        newMinutes = this.state.timeLeft.minutes - 1;\n      }\n    } else {\n      newMinutes = this.state.timeLeft.minutes;\n      newSeconds = this.state.timeLeft.seconds - 1;\n    }\n\n    this.setState({\n      breakLength: this.state.breakLength,\n      sessionLength: this.state.sessionLength,\n      timeLeft: {\n        minutes: newMinutes,\n        seconds: newSeconds,\n        },\n      isSession: newSession ? !this.state.isSession : this.state.isSession,\n      isPaused: this.state.isPaused,\n      timerID: this.state.timerID,\n    });\n    \n  }\n\n  \n  render(){\n    return (\n      <div id='pomodoro-clock'>\n        <h1>Pomodoro Clock</h1>\n        <label id='break-label'>Break Length</label>\n        <p id='break-length'>{this.state.breakLength}</p>\n        <button id='break-increment' onClick={this.incrementBreak}>Increase break</button>\n        <button id='break-decrement' onClick={this.decrementBreak}>Decrease break</button>\n        <label id='session-label'>Session Length</label>\n        <p id='session-length'>{this.state.sessionLength}</p>\n        <button id='session-increment' onClick={this.incrementSession}>Increase session</button>\n        <button id='session-decrement' onClick={this.decrementSession}>Decrease session</button>\n        <label id='timer-label'>{this.state.isSession? 'Session': 'Break'}</label>\n        <time id='time-left'>\n          {this.state.timeLeft.minutes < 10? \n            '0' + this.state.timeLeft.minutes.toString() :\n            this.state.timeLeft.minutes}:\n          {this.state.timeLeft.seconds < 10? \n            '0' + this.state.timeLeft.seconds.toString() :\n            this.state.timeLeft.seconds\n          }\n        </time>\n        <button id='start_stop' onClick={this.triggerPlayOrPause}> Start/Stop</button>\n        <button id='reset' onClick={this.reset}>Reset</button>\n        <audio id='beep' preload='auto' src={BEEPSRC}></audio>\n      </div>\n    );\n\n  }\n}\n\n\n\nReactDOM.render(\n  <PomodoroClock />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}